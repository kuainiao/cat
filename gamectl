#! /bin/bash
ROOT=`cd $(dirname $0); pwd`
CONFDIR=$ROOT/config
RUN_LOG_DIR=$ROOT/log
GAME_LOG_DIR=/data/logs/cat
GAME_CONFIG_DIR=$CONFDIR
INTERACTIVE=false
ERLANG_NODE=cat@localhost

# ÂÆö‰πâerlang vmÈÄâÈ°π
ERL=erl
POLL=true
ASYNC=8
SMP=true
ERL_PROCESSES=500000
CONNECT_ALL=true
DATETIME=`date "+%Y%m%d_%H%M%S"`
export ERL_CRASH_DUMP=$ROOT/erl_crash_$DATETIME.dump
export ERL_MAX_PORTS=102400
export ERL_MAX_ETS_TABLES=10000
export HOME=$ROOT

# ÂÖ∂ÂÆÉÂèòÈáè
COOKIE="node-cookie"
TRACE_PORT=4711

# ËøêË°åÁöÑÁ®ãÂ∫èÂèäÊéßÂà∂Êñá‰ª∂
APP_MOD=game
APP_CTL=game_ctl
ERROR_LOG=$RUN_LOG_DIR/error_${DATETIME}.log
SASL_LOG=$RUN_LOG_DIR/sasl_${DATETIME}.log

# define additional environment variables
EBINS="$ROOT/ebin $ROOT/ebin/game $ROOT/ebin/data $ROOT/ebin/base $ROOT/deps/cowboy/ebin/ \
        $ROOT/deps/ranch/ebin/ $ROOT/deps/cowlib/ebin/ \
        $ROOT/deps/lager/ebin/ $ROOT/deps/lager/deps/goldrush/ebin/ \
        "
#echo "ebins is " $EBINS

# makesure the logs dir exists
if [ ! -d $RUN_LOG_DIR ]; then
    mkdir -p $RUN_LOG_DIR || echo "make $RUN_LOG_DIR error!"; exit 1
fi

STATUS_SUCCESS=0    # ÊàêÂäü
STATUS_ERROR=1      # ÈîôËØØ
STATUS_NORUN=2       # Êú™ËøêË°å
STATUS_BADRPC=3     # rpcË∞ÉÁî®ÈîôËØØ
STATUS_USAGE=4      # Áî®Ê≥ïÈîôËØØ
STATUS_STARTING=5   # Ê≠£Âú®ÂêØÂä®
STATUS_RUNNING=6    # Ê≠£Âú®ËøêË°å‰∏≠
STATUS_STOPING=7    # Ê≠£Âú®ÂÅúÊ≠¢

# ÈáçÊñ∞Âä†ËΩΩÁöÑÁ≥ªÁªüÊï∞ÊçÆ
RELOAD_TYPE=code

# Ëé∑Âèñgame.conf‰∏≠Êüê‰∏™ÈÖçÁΩÆ
game_conf_value() {
    KEY=$1
    if [ -n "$KEY" ]; then
        echo `cat $CONFDIR/game.conf | grep "${KEY}" | tail -n 1 | sed -e "s/\s*{${KEY},\s*\(.*\)}.*/\1/"`
    fi
}

# ÊâìÂç∞ÈîôËØØ
error() {
    echo -e "[1;41m[ÈîôËØØ][0m $@"
    exit 1
}

# ÊâìÂç∞Ë≠¶Âëä
warn() {
    echo -e "[1;43m[Ë≠¶Âëä][0m $@"
}

# ÊâìÂç∞‰ø°ÊÅØ
echo2() {
    echo -e "[1;42m[Êìç‰Ωú][0m $@"
}

# Ëé∑ÂèñÂÜÖÁΩëip
getip() {
    echo `LANG=en_US; ifconfig | grep 'inet addr:' | grep -v '127.0.0.1' | grep '192.*' | cut -d: -f 2 | awk '{print $1}'`
}

# ‰ΩøÁî®ËØ¥Êòé
usage ()
{
    echo ""
    echo "Áî®Ê≥ï:"
    echo "$0 Âä®‰Ωú [ÈÄâÈ°π]"
    echo "Âä®‰Ωú:"
    echo "  live        ‰∫§‰∫íÊñπÂºèÂêØÂä®"
    echo "  start       ÂêéÂè∞ÊñπÂºèÂêØÂä®(ÂêåÊ≠•ÊñπÂºè)"
    echo "  async_start ÂêéÂè∞ÊñπÂºèÂêØÂä®(ÂºÇÊ≠•ÊñπÂºè)"
    echo "  status      Ëé∑ÂèñÂêéÂè∞ËøêË°åÁä∂ÊÄÅ"
    echo "  attach      ÈÄöËøáErlang shellËøûÊé•ÂêéÂè∞ËøêË°åËäÇÁÇπ"
    echo "  stop        ÂÅúÊ≠¢ËäÇÁÇπ(ÂºÇÊ≠•ÊñπÂºè)"
    echo "  sync_stop   ÂÅúÊ≠¢ËäÇÁÇπ(ÂêåÊ≠•ÊñπÂºè)"
    echo "  restart     ÈáçÂêØËäÇÁÇπ"
    echo "  reload      ÈáçÊñ∞Âä†ËΩΩÊï∞ÊçÆÊàñ‰ª£Á†Å"
    echo "  trace       ÂêØÂä®trace cient"
    echo ""
    echo "ÈÄâÈ°π:"
    echo "  -h, --help              ÊòæÁ§∫Êú¨‰ø°ÊÅØ"
    echo "  -s, --smp=true          ÊòØÂê¶‰ΩøÁî®smp(true|false,ÈªòËÆ§‰∏∫true)"
    echo "  -n, --node=Nodename     ËäÇÁÇπÂêçÁß∞:$ERLANG_NODE(default)"
    echo "  -c, --cookie=Cookie     ËäÇÁÇπcookie(ÈªòËÆ§\"\")"
    echo "  -r, --reload=Type       ÊåáÊòéË¶ÅreloadÁöÑÁ≥ªÁªüÊï∞ÊçÆ:code,config"
    echo "  -i, --interactive       ÊâßË°åÊìç‰ΩúÊó∂Áªô‰∏é‰∫§‰∫íÁ°ÆËÆ§"
    echo "  -p = TracePort          ËÆæÁΩÆtraceÁ´ØÂè£"
    echo ""
}

# ‰øÆÊîπulimit
change_ulimit() {
    if ! ulimit -HSn 102400 2> /dev/null ; then
        error "ËØ∑Á°Æ‰øùÂÖ∑ÊúârootÊùÉÈôê"
    fi
}

# ÊèêÁ§∫Á°ÆËÆ§‰ø°ÊÅØ
show_verify() {
    if [ "$INTERACTIVE" = "true" ]; then
        echo -n "ËØ∑Á°ÆËÆ§Ë¶ÅÊâßË°å$1Êìç‰Ωú? yes/no: "
        read option
        case $option in
            "yes");;
            *)exit 1;;
        esac
    fi
}

# Êü•ËØ¢ËøêË°å‰∏≠ËäÇÁÇπÁöÑ‰ø°ÊÅØ
rpc() 
{
    RPC_NODE=${NAME}_ctl@$HOST
    $ERL \
      $NAME_FLAG ${RPC_NODE} \
      -noinput \
      -pa $EBINS \
      -setcookie ${COOKIE} \
      -s ${APP_CTL} -extra $ERLANG_NODE $@
}

# ÊâìÂç∞rpcËøîÂõû‰ø°ÊÅØ
print_rpc_return ()
{
    case $1 in
    $STATUS_SUCCESS) 
        echo ""
        ;;
    $STATUS_ERROR) 
        error "Êìç‰ΩúÂèëÁîüÈîôËØØ"
        ;;
    $STATUS_NORUN) 
        warn "Êú™ËøêË°å"
        ;;
    $STATUS_BADRPC) 
        error "rpcË∞ÉÁî®ÈîôËØØ"
        ;;
    $STATUS_USAGE) 
        error "Áî®Ê≥ïÈîôËØØ"
        ;;
    $STATUS_STARTING) 
        error "Ê≠£Âú®ÂêØÂä®"
        ;;
    $STATUS_RUNNING) 
        error "Ê≠£Âú®ËøêË°å"
        ;;
    $STATUS_STOPING) 
        error "Ê≠£Âú®ÂÅúÊ≠¢"
        ;;
    *)
        error "Êú™Áü•ËøîÂõûÂÄº:$1"
    esac
}

# Âà§Êñ≠ËäÇÁÇπÊòØÂê¶ËøêË°å
is_started () 
{
    if [ "$APP_MOD" = "game" ]; then
        rpc status
    else
        rpc status $APP_MOD
    fi
    result=$?
    if [  "$result" = "$STATUS_SUCCESS" ]; then
        return 0
    fi
    return $STATUS_NORUN
}

# Âà§Êñ≠ËäÇÁÇπÊòØÂê¶crash
is_crashed() 
{
    if [ -f ${ERL_CRASH_DUMP} ]; then
        return 0
    fi
    return 1
}

# start interactive server
live ()
{
    change_ulimit
    $ERL \
      $NAME_FLAG $ERLANG_NODE \
      -pa $EBINS \
      -setcookie ${COOKIE} \
      -s ${APP_MOD} start \
      $ERLANG_OPTS -extra $ARGS "$@"
}

# ÂêØÂä®server
start ()
{
    ASYNC=$1
    change_ulimit
    if is_started; then
        warn "ËäÇÁÇπ$ERLANG_NODEÂ∑≤ÁªèÂêØÂä®"
        exit 0
    fi

    $ERL \
      $NAME_FLAG $ERLANG_NODE \
      -noinput -detached \
      -pa $EBINS \
      -setcookie ${COOKIE} \
      -kernel error_logger \{file,\"$ERROR_LOG\"\} \
      -sasl sasl_error_logger \{file,\"$SASL_LOG\"\} \
      -s ${APP_MOD} start\
      $ERLANG_OPTS -extra $ARGS "$@"
    if [ "$ASYNC" != "true" ]; then
        RETRY=0
        while [ $RETRY -lt 30 ];do
            if [ $? -ne 0 ]; then
                error "ÂêØÂä®Â§±Ë¥•:$?"
            else
                if is_started; then
                    break
                fi
                if is_crashed; then
                    error "ÂêØÂä®Â§±Ë¥•:ÂèëÁîücrash"
                else
                    let RETRY++
                    sleep 1
                fi
                if [ $RETRY -ge 30 ]; then
                    warn "!!!ÊúçÂä°Âô®$APP_NAMEÂêØÂä®Â§±Ë¥•,ËØ∑ÊâãÂä®Ê£ÄÊü•!!!"
                    exit 1
                fi
            fi
        done
        echo2 "ÂêØÂä®ÊàêÂäü!"
    else
        echo2 "Ê≠£Âú®ÂêØÂä®..."
    fi
}

# Ëé∑ÂèñÁä∂ÊÄÅ
status ()
{
    if is_started; then
        echo2 "ËøêË°å‰∏≠"
    else
        RET=$?
        print_rpc_return $RET
        exit $RET
    fi  
}

# ËøûÊé•Âà∞ÂêéÂè∞ËäÇÁÇπ
attach ()
{
    if ! is_started; then
        error "Êú™ÂêØÂä®"
    fi
    ATTACH_NODE=${NAME}debug@$HOST
    # Â¶ÇÊûúËäÇÁÇπÂ≠òÂú®ÂÖàkill
    PID_EXIST=`ps x | grep ${ATTACH_NODE} | grep -v 'grep' | awk '{print $1}'`
    if [ -n "$PID_EXIST" ]; then
        if !(kill -9 $PID_EXIST); then
            error "killÂ∑≤ÊúâÁöÑattachËäÇÁÇπ${ATTACH_NODE}Âá∫Èîô"
        fi
    fi
    $ERL $NAME_FLAG ${ATTACH_NODE} \
      -setcookie ${COOKIE} \
      -remsh $ERLANG_NODE \
      $ERLANG_OPTS $ARGS "$@"
}

# ÂêØÂä®‰∏Ä‰∏™trace client
trace ()
{
    if ! is_started; then
        error "Êú™ÂêØÂä®"
    fi
    TRACE_NODE=${NAME}_trace@$HOST
    # Â¶ÇÊûúËäÇÁÇπÂ≠òÂú®ÂÖàkill
    PID_EXIST=`ps x | grep ${TRACE_NODE} | grep -v 'grep' | awk '{print $1}'`
    if [ -n "$PID_EXIST" ]; then
        if !(kill -9 $PID_EXIST); then
            error "killÂ∑≤ÊúâÁöÑtraceËäÇÁÇπ${TRACE_NODE}Âá∫Èîô"
        fi
    fi
    $ERL $NAME_FLAG ${TRACE_NODE} \
      -setcookie ${COOKIE} \
      $ERLANG_OPTS \
      -pa $EBINS \
      -s ${APP_CTL} start_trace -extra $ERLANG_NODE $TRACE_PORT "$@"
}


# ÂÅúÊ≠¢ËäÇÁÇπ
stop_server ()
{
    show_verify;
    if rpc stop $@; then
        echo2 "ÂÅúÊ≠¢ÊàêÂäü"
    else
        print_rpc_return $?
    fi  
}

# ÈáçÂêØËäÇÁÇπ
restart ()
{
    show_verify;
    if rpc restart; then
        echo2 "ÈáçÂêØÊàêÂäü"
    else
        print_rpc_return $?
    fi  
}

# ÈáçÊñ∞Âä†ËΩΩ
reload ()
{
    show_verify;
    if rpc reload ${RELOAD_TYPE} $@ 2> /dev/null; then
        echo2 "ÈáçÊñ∞Âä†ËΩΩ${RELOAD_TYPE}ÊàêÂäü"
    else
        error "ÈáçÊñ∞Âä†ËΩΩ${RELOAD_TYPE}Â§±Ë¥•"
    fi  
}

# Ëé∑ÂèñÈÖçÁΩÆ‰∏≠ÁöÑÂÄº
# GAME_PLATFORM=$(game_conf_value platform)
# GAME_PLATFORM=${GAME_PLATFORM#\"}
# GAME_PLATFORM=${GAME_PLATFORM%\"}
# SERVER_ID=$(game_conf_value server_id)
# ERLANG_NODE=game_${GAME_PLATFORM}_${SERVER_ID}@localhost
# if [ -z "$GAME_PLATFORM" -o -z "$SERVER_ID" ]; then
#     echo "ËØ∑Ê£ÄÊü•$CONFDIR/game.conf Êñá‰ª∂‰∏≠Âπ≥Âè∞Áõ∏ÂÖ≥ÈÖçÁΩÆ"
#     exit 1
# fi
# GAME_LOG_DIR=${GAME_LOG_DIR}/${GAME_PLATFORM}s${SERVER_ID}/wait
mkdir -p ${GAME_LOG_DIR}
#echo "Âπ≥Âè∞${GAME_PLATFORM}Á¨¨${SERVER_ID}ÊúçËäÇÁÇπ${ERLANG_NODE}"

# parse command line parameters
while [ $# -ne 0 ] ; do
    PARAM=$1
    shift
    case $PARAM in
        --) break ;;
        --node|-n) ERLANG_NODE=$1; shift ;;
        --cookie|-c) COOKIE=$1 ; shift ;;
        --help|-h) usage; exit 0;;
        --smp|-s) SMP=$1; shift;;
        --reload|-r) RELOAD_TYPE=$1; shift;;
        --interactive|-i) INTERACTIVE=true; shift;;
        -p) TRACE_PORT=$1; shift;;
        *) ARGS="$ARGS $PARAM" ;;
    esac
done

NAME=${ERLANG_NODE%%@*}
HOST=${ERLANG_NODE##*@}
NAME_FLAG=-name
[ "$ERLANG_NODE" = "${ERLANG_NODE%.*}" ] && NAME_FLAG=-sname
LOCAL_IP=$(getip)
if [ "$NAME_FLAG" = "-name" -a "$HOST" !=  "$LOCAL_IP" ]; then 
    error "‰∏éÊú¨Êú∫ip:$LOCAL_IP‰∏çÁõ∏Á¨¶"
fi

if [ "$SMP" = "false" ]; then
    SMP=disable
else
    SMP=enable
fi
ERLANG_OPTS="-connect_all $CONNECT_ALL +K $POLL -smp $SMP +P $ERL_PROCESSES \
    +t 10485760 +fnu +hms 8192 +hmbs 8192 +zdbbl 81920 \
    -env ROOT_DIR ${ROOT} \
    -env GAME_CONFIG_DIR ${GAME_CONFIG_DIR} \
    -env GAME_LOG_DIR ${GAME_LOG_DIR} \
    -env RUN_LOG_DIR ${RUN_LOG_DIR}"

set -- $ARGS
ACTION=$1
shift
case ${ACTION} in
    '') usage;;
    'live') live;;
    'start') start false;;
    'async_start') start true;;
    'status') status;;
    'attach') attach;;
    'trace') trace;;
    'stop') stop_server false;;
    'sync_stop') stop_server true;;
    'restart') restart true;;
    'reload') reload $@;;
    *) usage; exit 1;;
esac
